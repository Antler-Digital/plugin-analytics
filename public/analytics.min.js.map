{"version":3,"sources":["../../src/public/analytics.min.js"],"sourcesContent":["interface AnalyticsOptions {\n  endpoint?: string;\n  domain?: string;\n}\n\nclass Analytics {\n  private endpoint: string;\n  private domain: string;\n  private initialized: boolean = false;\n  private sessionStartTime: number;\n  private isTracking: boolean = false;\n\n  constructor(options: AnalyticsOptions = {}) {\n    // Default endpoint based on script src or fallback to /api/events\n    const scriptEl = document.querySelector(\n      'script[src*=\"analytics.min.js\"]',\n    ) as HTMLScriptElement;\n    const defaultEndpoint = scriptEl?.src.replace(\n      \"analytics.min.js\",\n      \"api/events\",\n    );\n\n    this.endpoint = options.endpoint || defaultEndpoint || \"/api/events\";\n    this.domain = options.domain || window.location.hostname;\n    this.sessionStartTime = Date.now();\n    this.init();\n  }\n\n  private async init(): Promise<void> {\n    if (this.initialized) return;\n\n    // Track initial pageview after a small delay to ensure page is fully loaded\n    setTimeout(() => this.trackPageView(), 100);\n\n    // Setup session end tracking\n    this.setupSessionEndTracking();\n\n    // Handle route changes for SPAs and regular navigation\n    window.addEventListener(\"popstate\", this.handleRouteChange);\n\n    // For modern browsers, detect URL changes with debounced observer\n    let lastUrl = window.location.href;\n    const observer = new MutationObserver(\n      this.debounce(() => {\n        const currentUrl = window.location.href;\n        if (currentUrl !== lastUrl) {\n          lastUrl = currentUrl;\n          this.handleRouteChange();\n        }\n      }, 1000),\n    );\n\n    // Only observe body and limit to specific changes\n    const body = document.querySelector(\"body\");\n    if (body) {\n      observer.observe(body, {\n        childList: true,\n        subtree: true,\n        attributes: false,\n        characterData: false,\n      });\n    }\n\n    this.initialized = true;\n  }\n\n  // Debounce route change handling\n  private handleRouteChange = this.debounce(async () => {\n    await this.trackPageView();\n  }, 1000);\n\n  // Add debounce utility\n  private debounce(fn: Function, delay: number) {\n    let timeoutId: NodeJS.Timeout;\n    return (...args: any[]) => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => fn(...args), delay);\n    };\n  }\n\n  private setupSessionEndTracking(): void {\n    // Track tab/window close\n    window.addEventListener(\"beforeunload\", () => {\n      this.trackSessionEnd();\n    });\n\n    // Track when user switches tabs\n    document.addEventListener(\"visibilitychange\", () => {\n      if (document.visibilityState === \"hidden\") {\n        this.trackSessionEnd();\n      }\n    });\n\n    // Backup: track when user becomes inactive\n    let inactivityTimeout: NodeJS.Timeout;\n    const resetInactivityTimeout = () => {\n      clearTimeout(inactivityTimeout);\n      inactivityTimeout = setTimeout(\n        () => {\n          this.trackSessionEnd();\n        },\n        30 * 60 * 1000,\n      ); // 30 minutes of inactivity\n    };\n\n    // Reset timeout on user activity\n    [\"mousedown\", \"keydown\", \"touchstart\", \"scroll\"].forEach((event) => {\n      window.addEventListener(event, resetInactivityTimeout, { passive: true });\n    });\n\n    resetInactivityTimeout();\n  }\n\n  private async trackSessionEnd(): Promise<void> {\n    try {\n      const sessionDuration = Date.now() - this.sessionStartTime;\n\n      // Use sendBeacon for more reliable delivery during page unload\n      const eventsUrl = new URL(this.endpoint);\n      eventsUrl.searchParams.append(\"domain\", this.domain);\n      eventsUrl.searchParams.append(\"event\", \"session_end\");\n      eventsUrl.searchParams.append(\"duration\", sessionDuration.toString());\n\n      // Fallback to sync image request\n      await this.loadPixel(eventsUrl.toString());\n    } catch (error) {\n      console.warn(\"Failed to track session end:\", error);\n      // Optionally implement retry logic here\n    }\n  }\n\n  private async loadPixel(url: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const pixel = new Image();\n      pixel.onload = () => {\n        pixel.remove();\n        resolve();\n      };\n      pixel.onerror = (error) => {\n        pixel.remove();\n        if (error instanceof ErrorEvent) {\n          reject(new Error(`Network error: ${error.message}`));\n        } else {\n          reject(new Error(\"Failed to load tracking pixel\"));\n        }\n      };\n      pixel.src = url;\n      pixel.style.display = \"none\";\n      document.body.appendChild(pixel);\n    });\n  }\n\n  private getUtmParams(): Record<string, string> {\n    const urlParams = new URLSearchParams(window.location.search);\n    const utmParams: Record<string, string> = {};\n    [\"source\", \"medium\", \"campaign\", \"term\", \"content\"].forEach((param) => {\n      const value = urlParams.get(`utm_${param}`);\n      if (value) utmParams[param] = value;\n    });\n\n    return utmParams;\n  }\n\n  private async trackPageView(): Promise<void> {\n    // Add a guard to prevent tracking if the previous request hasn't completed\n    if (this.isTracking) return;\n    this.isTracking = true;\n\n    try {\n      await this.retryWithBackoff(async () => {\n        const eventsUrl = new URL(this.endpoint);\n        eventsUrl.searchParams.append(\"domain\", this.domain);\n        eventsUrl.searchParams.append(\"path\", window.location.pathname);\n\n        // Only add referrer if it's from a different domain\n        const referrer = document.referrer;\n        if (referrer && !referrer.includes(window.location.hostname)) {\n          eventsUrl.searchParams.append(\"ref\", referrer);\n        }\n\n        // Add UTM parameters if they exist\n        const utmParams = this.getUtmParams();\n        Object.entries(utmParams).forEach(([key, value]) => {\n          eventsUrl.searchParams.append(`utm_${key}`, value);\n        });\n\n        await this.loadPixel(eventsUrl.toString());\n      });\n    } catch (error) {\n      // Only log if it's a final failure after retries\n      console.warn(\"Failed to track page view after retries:\", error);\n    } finally {\n      this.isTracking = false;\n    }\n  }\n\n  // Helper method for exponential backoff retry\n  private async retryWithBackoff(\n    fn: () => Promise<void>,\n    maxAttempts = 3,\n    baseDelay = 1000,\n  ): Promise<void> {\n    for (let attempt = 0; attempt < maxAttempts; attempt++) {\n      try {\n        await fn();\n        return;\n      } catch (error) {\n        if (attempt === maxAttempts - 1) throw error;\n        const delay = baseDelay * Math.pow(2, attempt);\n        await new Promise((resolve) => setTimeout(resolve, delay));\n      }\n    }\n  }\n\n  private shouldRetry(error: unknown): boolean {\n    // Improve error type checking\n    if (error instanceof Error) {\n      // Retry on network errors\n      if (error.message.includes(\"Network error\")) {\n        return true;\n      }\n    }\n    // Don't retry on other types of errors\n    return false;\n  }\n\n  // Public method to manually track page views\n  public async trackView(): Promise<void> {\n    try {\n      await this.retryWithBackoff(() => this.trackPageView());\n    } catch (error) {\n      console.warn(\"Manual page view tracking failed after retries:\", error);\n    }\n  }\n}\n\n// Create instance immediately\nconst analytics = new Analytics();\n\n// Export for advanced usage\nif (typeof window !== \"undefined\") {\n  (window as any).Analytics = Analytics;\n  (window as any).analytics = analytics;\n}\n"],"names":["Analytics","options","__publicField","__async","scriptEl","defaultEndpoint","lastUrl","observer","currentUrl","body","fn","delay","timeoutId","args","inactivityTimeout","resetInactivityTimeout","event","sessionDuration","eventsUrl","error","url","resolve","reject","pixel","urlParams","utmParams","param","value","referrer","key","maxAttempts","baseDelay","attempt","analytics"],"mappings":"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"}