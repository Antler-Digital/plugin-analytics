{"version":3,"sources":["../../src/public/analytics.min.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/require-await */\ninterface AnalyticsOptions {\n  domain?: string\n  endpoint?: string\n}\n\nclass Analytics {\n  private domain: string\n  private endpoint: string\n  // Debounce route change handling\n  private handleRouteChange = this.debounce(async () => {\n    await this.trackPageView()\n  }, 1000)\n  private initialized: boolean = false\n  private isTracking: boolean = false\n\n  private sessionStartTime: number\n\n  constructor(options: AnalyticsOptions = {}) {\n    // Default endpoint based on script src or fallback to /api/events\n    const scriptEl = document?.querySelector('script[src*=\"analytics.min.js\"]') as HTMLScriptElement\n    const defaultEndpoint = scriptEl?.src.replace('analytics.min.js', 'api/events')\n\n    this.endpoint = options.endpoint || defaultEndpoint || '/api/events'\n    this.domain = options.domain || window.location.hostname\n    this.sessionStartTime = Date.now()\n    void this.init()\n  }\n\n  // Add debounce utility\n  private debounce(fn: (...args: any[]) => void, delay: number) {\n    let timeoutId: NodeJS.Timeout\n    return (...args: any[]) => {\n      clearTimeout(timeoutId)\n      timeoutId = setTimeout(() => fn(...args), delay)\n    }\n  }\n\n  private getUtmParams(): Record<string, string> {\n    const urlParams = new URLSearchParams(window.location.search)\n    const utmParams: Record<string, string> = {}\n    ;['source', 'medium', 'campaign', 'term', 'content'].forEach((param) => {\n      const value = urlParams.get(`utm_${param}`)\n      if (value) {\n        utmParams[param] = value\n      }\n    })\n\n    return utmParams\n  }\n\n  private async init(): Promise<void> {\n    if (this.initialized) {\n      return\n    }\n\n    // Track initial pageview after a small delay to ensure page is fully loaded\n    setTimeout(() => this.trackPageView(), 100)\n\n    // Setup session end tracking\n    this.setupSessionEndTracking()\n\n    // Handle route changes for SPAs and regular navigation\n    window.addEventListener('popstate', this.handleRouteChange)\n\n    // For modern browsers, detect URL changes with debounced observer\n    let lastUrl = window.location.href\n    const observer = new MutationObserver(\n      this.debounce(() => {\n        const currentUrl = window.location.href\n        if (currentUrl !== lastUrl) {\n          lastUrl = currentUrl\n          this.handleRouteChange()\n        }\n      }, 1000),\n    )\n\n    // Only observe body and limit to specific changes\n    const body = document?.querySelector('body')\n    if (body) {\n      observer.observe(body, {\n        attributes: false,\n        characterData: false,\n        childList: true,\n        subtree: true,\n      })\n    }\n\n    this.initialized = true\n  }\n\n  private async loadPixel(url: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const pixel = new Image()\n      pixel.onload = () => {\n        pixel.remove()\n        resolve()\n      }\n      pixel.onerror = (error) => {\n        pixel.remove()\n        if (error instanceof ErrorEvent) {\n          reject(new Error(`Network error: ${error.message}`))\n        } else {\n          reject(new Error('Failed to load tracking pixel'))\n        }\n      }\n      pixel.src = url\n      pixel.style.display = 'none'\n      document?.body.appendChild(pixel)\n    })\n  }\n\n  // Helper method for exponential backoff retry\n  private async retryWithBackoff(\n    fn: () => Promise<void>,\n    maxAttempts = 3,\n    baseDelay = 1000,\n  ): Promise<void> {\n    for (let attempt = 0; attempt < maxAttempts; attempt++) {\n      try {\n        await fn()\n        return\n      } catch (error) {\n        if (attempt === maxAttempts - 1) {\n          throw error\n        }\n        const delay = baseDelay * Math.pow(2, attempt)\n        await new Promise((resolve) => setTimeout(resolve, delay))\n      }\n    }\n  }\n\n  private setupSessionEndTracking(): void {\n    // Track tab/window close\n    window.addEventListener('beforeunload', () => {\n      void this.trackSessionEnd()\n    })\n\n    // Track when user switches tabs\n    document?.addEventListener('visibilitychange', () => {\n      if (document?.visibilityState === 'hidden') {\n        void this.trackSessionEnd()\n      }\n    })\n\n    // Backup: track when user becomes inactive\n    let inactivityTimeout: NodeJS.Timeout\n    const resetInactivityTimeout = () => {\n      clearTimeout(inactivityTimeout)\n      inactivityTimeout = setTimeout(\n        () => {\n          void this.trackSessionEnd()\n        },\n        30 * 60 * 1000,\n      ) // 30 minutes of inactivity\n    }\n\n    // Reset timeout on user activity\n    ;['mousedown', 'keydown', 'touchstart', 'scroll'].forEach((event) => {\n      window.addEventListener(event, resetInactivityTimeout, { passive: true })\n    })\n\n    resetInactivityTimeout()\n  }\n\n  private shouldRetry(error: unknown): boolean {\n    // Improve error type checking\n    if (error instanceof Error) {\n      // Retry on network errors\n      if (error.message.includes('Network error')) {\n        return true\n      }\n    }\n    // Don't retry on other types of errors\n    return false\n  }\n\n  private async trackPageView(): Promise<void> {\n    // Add a guard to prevent tracking if the previous request hasn't completed\n    if (this.isTracking) {\n      return\n    }\n    this.isTracking = true\n\n    try {\n      await this.retryWithBackoff(async () => {\n        const eventsUrl = new URL(this.endpoint)\n        eventsUrl.searchParams.append('domain', this.domain)\n        eventsUrl.searchParams.append('path', window.location.pathname)\n\n        // Only add referrer if it's from a different domain\n        const referrer = document?.referrer\n        if (referrer && !referrer.includes(window.location.hostname)) {\n          eventsUrl.searchParams.append('ref', referrer)\n        }\n\n        // Add UTM parameters if they exist\n        const utmParams = this.getUtmParams()\n        Object.entries(utmParams).forEach(([key, value]) => {\n          eventsUrl.searchParams.append(`utm_${key}`, value)\n        })\n\n        await this.loadPixel(eventsUrl.toString())\n      })\n    } catch (error) {\n      // Only log if it's a final failure after retries\n      console.warn('Failed to track page view after retries:', error)\n    } finally {\n      this.isTracking = false\n    }\n  }\n\n  private async trackSessionEnd(): Promise<void> {\n    try {\n      const sessionDuration = Date.now() - this.sessionStartTime\n\n      // Use sendBeacon for more reliable delivery during page unload\n      const eventsUrl = new URL(this.endpoint)\n      eventsUrl.searchParams.append('domain', this.domain)\n      eventsUrl.searchParams.append('event', 'session_end')\n      eventsUrl.searchParams.append('duration', sessionDuration.toString())\n\n      // Fallback to sync image request\n      await this.loadPixel(eventsUrl.toString())\n    } catch (error) {\n      console.warn('Failed to track session end:', error)\n      // Optionally implement retry logic here\n    }\n  }\n\n  // Public method to manually track page views\n  public async trackView(): Promise<void> {\n    try {\n      await this.retryWithBackoff(() => this.trackPageView())\n    } catch (error) {\n      console.warn('Manual page view tracking failed after retries:', error)\n    }\n  }\n}\n\n// Create instance immediately\nconst analytics = new Analytics()\n\n// Export for advanced usage\nif (typeof window !== 'undefined') {\n  ;(window as any).Analytics = Analytics\n  ;(window as any).analytics = analytics\n}\n"],"names":["Analytics","options","__publicField","__async","scriptEl","defaultEndpoint","fn","delay","timeoutId","args","urlParams","utmParams","param","value","lastUrl","observer","currentUrl","body","url","resolve","reject","pixel","error","maxAttempts","baseDelay","attempt","inactivityTimeout","resetInactivityTimeout","event","eventsUrl","referrer","key","sessionDuration","analytics"],"mappings":"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"}